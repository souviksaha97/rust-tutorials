// #![no_std]
use plotters::prelude::*;
use microfft::real::rfft_512;

fn main() {
    let sine: [u16;500] = [
        2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283, 2200, 3116, 3770, 3992, 3769, 3242, 2649, 2234, 2149, 2400, 2844, 3247, 3379, 3104, 2440, 1555, 711, 165, 81, 461, 1157, 1918, 2492, 2714, 2571, 2200, 1828, 1685, 1907, 2481, 3242, 3938, 4318, 4234, 3688, 2844, 1959, 1295, 1020, 1152, 1555, 1999, 2250, 2165, 1750, 1157, 630, 407, 629, 1283
    ];

    let mut floater: [f32; 512] = [0.0; 512];

    for i in 0..sine.len() {
        floater[i] = sine[i] as f32;
    }

    let result = rfft_512(&mut floater);
    result[0].re = 0.0;
    result[0].im = 0.0;

    for i in 0..result.len() {
        print!("{}, ", result[i]);
    }

    println!("\r\nnHsfsbf");
 

    let mut magnitude: [f32; 256] = [0.0; 256];
    for i in 0..result.len() {
        magnitude[i] = ((result[i].re as f32).powf(2.0) + (result[i].im as f32).powf(2.0)).sqrt();
    }

    let root = BitMapBackend::new("chart.png", (640, 480)).into_drawing_area();
    root.fill(&WHITE).unwrap();

    let mut chart = ChartBuilder::on(&root)
        .caption("FFT", ("sans-serif", 30))
        .set_label_area_size(LabelAreaPosition::Left, 40)
        .set_label_area_size(LabelAreaPosition::Bottom, 40)
        .build_cartesian_2d(0..25 as i32, 0..500000)
        .unwrap();

    // Draw the chart
    chart.configure_mesh().draw().unwrap();
    chart.draw_series(LineSeries::new(
        magnitude.iter().enumerate().map(|(i, &val)| (i as i32, val as i32)),
        &BLUE,
    )).unwrap();

    let mut max_index = 0;
    for i in 0..magnitude.len() {
        if magnitude[i] > magnitude[max_index] {
            max_index = i;
        }
    }

    // println!("{}", max_index);
    println!("{:?}", magnitude);
}
